@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fadeInRight {
  from {
    transform: translate3d(100%, 0, 0);
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fadeOutLeft {
  from {
    opacity: 1;
  }

  to {
    transform: translate3d(-100%, 0, 0);
    opacity: 0;
  }
}

// Breakpoints
@mixin respond-to($breakpoint, $size) {
  @if map-has-key($breakpoints, $breakpoint) {

    @if($size == 'max') {
      @media (max-width: #{map-get($breakpoints, $breakpoint)}) {
        @content;
      }
    } @else {
      @media (min-width: #{map-get($breakpoints, $breakpoint)}) {
        @content;
      }
    }

  }

  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@mixin transition-fast() {
  transition: background-color .2s ease;
}

@mixin shadow() {
  box-shadow: 0 6px 15px -2px rgba(0,0,0, 0.1);
}

@mixin grow() {
  transition: all .1s ease-in-out;

  &:hover {
    transform: scale(1.04);
  }
}

@mixin shrink() {
  transition: transform .1s ease-in-out;

  &:focus {
    transform: scale(0.96);
  }
}


@mixin drop-shadow() {
  background-color: white;
  box-shadow: 0.25em 0.25em 0px 0px color(darkblue);
  border: 3px solid color(darkblue);
}

@mixin button-hover() {
  &:hover {
    color: white;
    background-color: color(lightgreen);
  }
}

@mixin rowMachine($cols) {

  @if($cols == 1) {
    flex: 0 0 auto;
    max-width: 100%;
    width: 100%;

  } @else {
    flex: 0 0 calc((100% / #{$cols}));
    max-width: calc((100% / #{$cols}));
    width: calc((100% / #{$cols}));
  }

}

@mixin siteMaxWidth() {
  @include respond-to(1600, 'min') {
    max-width: $siteMaxWidth;
  }
}


@mixin vertical-align($position: absolute) {
  position: $position;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}



@mixin gradient-bg() {
  background: #aef6cb;
  background: linear-gradient(to bottom, #aef6cb 16%,#77e0a6 100%);
}

@mixin dropShadow() {
  box-shadow: 0 4px 15px -1px rgba(0,0,0,.15);
}


@mixin dim($opacity) {
  opacity: $opacity;
}
